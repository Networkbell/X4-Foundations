<?xml version="1.0" encoding="utf-8"?>
<diff>

	<replace sel="/aiscript/attention//do_elseif[@value=&quot;($orderdef.$id == 'TradeRoutine') or ($orderdef.$id == 'TradeRoutine_Basic') or ($orderdef.$id == 'TradeRoutine_Advanced')&quot;]">
		<do_elseif value="($orderdef.$id == 'TradeRoutine') or ($orderdef.$id == 'TradeRoutine_Basic') or ($orderdef.$id == 'TradeRoutine_Advanced') or ($orderdef.$id == 'TradeRoutine_BasicMid') or ($orderdef.$id == 'TradeRoutine_BasicMidStandard') or ($orderdef.$id == 'TradeRoutine_BasicMidStandardAdvanced') or ($orderdef.$id == 'TradeRoutine_BasicMidStandardAdvancedExpert')">
			<do_if value="$createdefaultorder? or (not $incompatiblewaretransport?)">
				<set_value name="$added"/>
				<do_if value="@this.assignedcontrolled.order.isrunning">
					<clear_order_failure order="this.assignedcontrolled.order"/>
				</do_if>
				<do_if value="@$order.$warebasket_override.count or @$orderdef.$warebasket_override.count">
					<do_if value="$createdefaultorder?">
						<create_order id="$orderdef.$id" object="this.assignedcontrolled" default="true">
							<param name="warebasket" value="$orderdef.$warebasket"/>
							<param name="range" value="$orderdef.$range"/>
							<param name="minbuy" value="$orderdef.$minbuy"/>
							<param name="maxbuy" value="$orderdef.$maxbuy"/>
							<param name="minsell" value="$orderdef.$minsell"/>
							<param name="maxsell" value="$orderdef.$maxsell"/>
							<param name="tradeforbuildstorage" value="$orderdef.$tradeforbuildstorage"/>
							<param name="usecover" value="$orderdef.$usecover"/>
							<param name="warebasket_override" value="$orderdef.$warebasket_override"/>
						</create_order>
					</do_if>
					<do_else>
						<set_value name="$orderdef.$warebasket" exact="$order.$warebasket"/>
						<set_value name="$orderdef.$range" exact="$order.$range"/>
						<set_value name="$orderdef.$minbuy" exact="$order.$minbuy"/>
						<set_value name="$orderdef.$maxbuy" exact="$order.$maxbuy"/>
						<set_value name="$orderdef.$minsell" exact="$order.$minsell"/>
						<set_value name="$orderdef.$maxsell" exact="$order.$maxsell"/>
						<set_value name="$orderdef.$tradeforbuildstorage" exact="$order.$tradeforbuildstorage"/>
						<set_value name="$orderdef.$usecover" exact="$order.$usecover"/>
						<set_value name="$orderdef.$warebasket_override" exact="$order.$warebasket_override"/>
						<run_script name="$scriptname" sinceversion="2">
							<param name="warebasket" value="$order.$warebasket"/>
							<param name="range" value="$order.$range"/>
							<param name="minbuy" value="$order.$minbuy"/>
							<param name="maxbuy" value="$order.$maxbuy"/>
							<param name="minsell" value="$order.$minsell"/>
							<param name="maxsell" value="$order.$maxsell"/>
							<param name="tradeforbuildstorage" value="$order.$tradeforbuildstorage"/>
							<param name="usecover" value="$order.$usecover"/>
							<param name="warebasket_override" value="$order.$warebasket_override"/>
						</run_script>
					</do_else>
				</do_if>
				<do_else>
					<do_if value="$createdefaultorder?">
						<create_order id="$orderdef.$id" object="this.assignedcontrolled" default="true">
							<param name="warebasket" value="$orderdef.$warebasket"/>
							<param name="range" value="$orderdef.$range"/>
							<param name="minbuy" value="$orderdef.$minbuy"/>
							<param name="maxbuy" value="$orderdef.$maxbuy"/>
							<param name="minsell" value="$orderdef.$minsell"/>
							<param name="maxsell" value="$orderdef.$maxsell"/>
							<param name="tradeforbuildstorage" value="$orderdef.$tradeforbuildstorage"/>
							<param name="usecover" value="$orderdef.$usecover"/>
						</create_order>
					</do_if>
					<do_else>
						<set_value name="$orderdef.$warebasket" exact="$order.$warebasket"/>
						<set_value name="$orderdef.$range" exact="$order.$range"/>
						<set_value name="$orderdef.$minbuy" exact="$order.$minbuy"/>
						<set_value name="$orderdef.$maxbuy" exact="$order.$maxbuy"/>
						<set_value name="$orderdef.$minsell" exact="$order.$minsell"/>
						<set_value name="$orderdef.$maxsell" exact="$order.$maxsell"/>
						<set_value name="$orderdef.$tradeforbuildstorage" exact="$order.$tradeforbuildstorage"/>
						<set_value name="$orderdef.$usecover" exact="$order.$usecover"/>
						<run_script name="$scriptname">
							<param name="warebasket" value="$order.$warebasket"/>
							<param name="range" value="$order.$range"/>
							<param name="minbuy" value="$order.$minbuy"/>
							<param name="maxbuy" value="$order.$maxbuy"/>
							<param name="minsell" value="$order.$minsell"/>
							<param name="maxsell" value="$order.$maxsell"/>
							<param name="tradeforbuildstorage" value="$order.$tradeforbuildstorage"/>
							<param name="usecover" value="$order.$usecover"/>
						</run_script>
					</do_else>
				</do_else>
			</do_if>
		</do_elseif>
	</replace>
	
	
	
	<replace sel="/aiscript/attention//do_elseif[@value=&quot;($orderdef.$id == 'MiningRoutine') or ($orderdef.$id == 'MiningRoutine_Advanced') or ($orderdef.$id == 'MiningRoutine_Basic') or ($orderdef.$id == 'MiningRoutine_Expert')&quot;]">
		<do_elseif value="($orderdef.$id == 'MiningRoutine') or ($orderdef.$id == 'MiningRoutine_Advanced') or ($orderdef.$id == 'MiningRoutine_Basic') or ($orderdef.$id == 'MiningRoutine_Expert') or ($orderdef.$id == 'MiningRoutine_BasicMid') or ($orderdef.$id == 'MiningRoutine_BasicMidStandard') or ($orderdef.$id == 'MiningRoutine_BasicMidStandardAdvanced') or ($orderdef.$id == 'MiningRoutine_BasicMidStandardAdvancedExpert')">
			<do_if value="(this.assignedcontrolled.primarypurpose == purpose.mine) and ($createdefaultorder? or (not $incompatiblewaretransport?) or ($commander.waretransport.indexof.{waretransport.solid} and this.assignedcontrolled.waretransport.indexof.{waretransport.solid}) or ($commander.waretransport.indexof.{waretransport.liquid} and this.assignedcontrolled.waretransport.indexof.{waretransport.liquid}))">
				<set_value name="$added"/>
				<do_if value="@this.assignedcontrolled.order.isrunning">
					<clear_order_failure order="this.assignedcontrolled.order"/>
				</do_if>
				<do_if value="@$order.$warebasket_override.count or @$orderdef.$warebasket_override.count">
					<do_if value="$createdefaultorder?">
						<create_order id="$orderdef.$id" object="this.assignedcontrolled" default="true">
							<param name="warebasket" value="$orderdef.$warebasket"/>
							<param name="range" value="$orderdef.$range"/>
							<param name="minbuy" value="$orderdef.$minbuy"/>
							<param name="maxbuy" value="$orderdef.$maxbuy"/>
							<param name="minsell" value="$orderdef.$minsell"/>
							<param name="maxsell" value="$orderdef.$maxsell"/>
							<param name="warebasket_override" value="$orderdef.$warebasket_override"/>
						</create_order>
					</do_if>
					<do_else>
						<set_value name="$orderdef.$warebasket" exact="$order.$warebasket"/>
						<set_value name="$orderdef.$range" exact="$order.$range"/>
						<set_value name="$orderdef.$minbuy" exact="$order.$minbuy"/>
						<set_value name="$orderdef.$maxbuy" exact="$order.$maxbuy"/>
						<set_value name="$orderdef.$minsell" exact="$order.$minsell"/>
						<set_value name="$orderdef.$maxsell" exact="$order.$maxsell"/>
						<set_value name="$orderdef.$warebasket_override" exact="$order.$warebasket_override"/>
						<run_script name="$scriptname" sinceversion="2">
							<param name="warebasket" value="$order.$warebasket"/>
							<param name="range" value="$order.$range"/>
							<param name="minbuy" value="$order.$minbuy"/>
							<param name="maxbuy" value="$order.$maxbuy"/>
							<param name="minsell" value="$order.$minsell"/>
							<param name="maxsell" value="$order.$maxsell"/>
							<param name="warebasket_override" value="$order.$warebasket_override"/>
						</run_script>
					</do_else>
				</do_if>
				<do_else>
					<do_if value="$createdefaultorder?">
						<create_order id="$orderdef.$id" object="this.assignedcontrolled" default="true">
							<param name="warebasket" value="$orderdef.$warebasket"/>
							<param name="range" value="$orderdef.$range"/>
							<param name="minbuy" value="$orderdef.$minbuy"/>
							<param name="maxbuy" value="$orderdef.$maxbuy"/>
							<param name="minsell" value="$orderdef.$minsell"/>
							<param name="maxsell" value="$orderdef.$maxsell"/>
						</create_order>
					</do_if>
					<do_else>
						<set_value name="$orderdef.$warebasket" exact="$order.$warebasket"/>
						<set_value name="$orderdef.$range" exact="$order.$range"/>
						<set_value name="$orderdef.$minbuy" exact="$order.$minbuy"/>
						<set_value name="$orderdef.$maxbuy" exact="$order.$maxbuy"/>
						<set_value name="$orderdef.$minsell" exact="$order.$minsell"/>
						<set_value name="$orderdef.$maxsell" exact="$order.$maxsell"/>
						<run_script name="$scriptname">
							<param name="warebasket" value="$order.$warebasket"/>
							<param name="range" value="$order.$range"/>
							<param name="minbuy" value="$order.$minbuy"/>
							<param name="maxbuy" value="$order.$maxbuy"/>
							<param name="minsell" value="$order.$minsell"/>
							<param name="maxsell" value="$order.$maxsell"/>
						</run_script>
					</do_else>
				</do_else>
			</do_if>
			<do_elseif value="this.assignedcontrolled.primarypurpose != purpose.mine">
				<set_value name="$failurereason" exact="{1045,158}" comment="This ship type cannot mine."/>
			</do_elseif>
			<do_elseif value="$incompatiblewaretransport?">
				<set_value name="$failurereason" exact="{1045,156}" comment="This ship type cannot carry the required wares."/>
			</do_elseif>
		</do_elseif>
	</replace>
</diff><?xml version="1.0" encoding="utf-8" ?>
<diff>
	<replace sel="/aiscript/order[@id='MiningRoutine_Advanced']">
		<order id="MiningRoutine_BasicMidStandardAdvanced" name="{1819190166, 1}" description="{1041, 592}" category="mining" allowinloop="false">
        <params>
          <param name="warebasket" required="true" default="this.ship.warebasket.list" type="list" text="{1041, 10146}" comment="Wares. List of resources that we will supply.">
            <input_param name="type" value="'ware'"/>
            <input_param name="cancarry" value="this.ship"/>
            <input_param name="isminable" value="true"/>
          </param>
          <param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
                 else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space"/>
          <param name="minbuy" default="0" type="internal" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
          <param name="maxbuy" default="[([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3), 0].max" type="number" text="{1041, 10056}" comment="Max gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided">
            <input_param name="startvalue" value="0"/>
            <input_param name="min" value="0"/>
            <input_param name="max" value="[([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3), 0].max"/>
            <input_param name="step" value="1"/>
          </param>
          <param name="minsell" default="0" type="internal" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>
          <param name="maxsell" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3" type="number" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
            <input_param name="startvalue" value="0"/>
            <input_param name="min" value="0"/>
            <input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3"/>
            <input_param name="step" value="1"/>
          </param>

          <param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
            <input_param name="startvalue" value="0s"/>
            <input_param name="min" value="0s"/>
            <input_param name="max" value="24h"/>
            <input_param name="step" value="1min"/>
            <patch value="0s" sinceversion="1"/>
          </param>
          <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
            <input_param name="truevalue" value="100"/>
          </param>
          <param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
            <input_param name="truevalue" value="100"/>
          </param>
        </params>
        <skill min="60"/>
        <requires primarypurpose="purpose.mine"/>
      </order>
	</replace>
</diff><?xml version="1.0" encoding="utf-8" ?>
<diff>
	<replace sel="/aiscript/order[@id='MiningRoutine_Basic']">
		<order id="MiningRoutine_Basic" name="{1819190160, 1}" description="{1041, 612}" category="mining" allowinloop="false">
    <params>
      <param name="warebasket" required="true" default="this.ship.warebasket.random" type="ware" text="{1041, 10144}" comment="Ware. Resource that we will supply.">
        <input_param name="cancarry" value="this.ship"/>
        <input_param name="isminable" value="true"/>
      </param>
      <param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else (if this.sector.resources.{$warebasket}.exists then this.sector else null)))" type="sector" text="{1041, 10005}" comment="Anchor space">
        <input_param name="hasresources" value="if @$warebasket.count then $warebasket else [$warebasket]" />
      </param>
      <param name="minbuy" default="0" type="internal" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
      <param name="maxbuy" default="0" type="internal" text="{1041, 10056}" comment="Max gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
      <param name="minsell" default="0" type="internal" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>
      <param name="maxsell" default="0" type="internal" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>

      <param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
        <input_param name="startvalue" value="0s"/>
        <input_param name="min" value="0s"/>
        <input_param name="max" value="24h"/>
        <input_param name="step" value="1min"/>
        <patch value="0s" sinceversion="1"/>
      </param>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
      <param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires primarypurpose="purpose.mine"/>
  </order>
	</replace>
</diff>﻿<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="order.mining.routine.basicmid" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">
	<order id="MiningRoutine_BasicMid" name="{1819190162, 1}" description="{1819190162, 2}" category="mining" allowinloop="false">
		<params>
			<param name="warebasket" required="true" default="this.ship.warebasket.random" type="ware" text="{1041, 10144}" comment="Ware. Resource that we will supply.">
				<input_param name="cancarry" value="this.ship"/>
				<input_param name="isminable" value="true"/>
			</param>
			<param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space"/>
			<param name="minbuy" default="0" type="internal" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
			<param name="maxbuy" default="[([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3), 0].max" type="number" text="{1041, 10056}" comment="Max gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3), 0].max"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="minsell" default="0" type="internal" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>
			<param name="maxsell" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3" type="number" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3"/>
				<input_param name="step" value="1"/>
			</param>

			<param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
				<input_param name="startvalue" value="0s"/>
				<input_param name="min" value="0s"/>
				<input_param name="max" value="24h"/>
				<input_param name="step" value="1min"/>
				<patch value="0s" sinceversion="1"/>
			</param>
			<param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
				<input_param name="truevalue" value="100"/>
			</param>
			<param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
				<input_param name="truevalue" value="100"/>
			</param>
		</params>
		<skill min="20"/>
		<requires primarypurpose="purpose.mine"/>
	</order>
	<attention min="unknown">
		<actions>
				<do_if value="not @$warebasket.count">
					<set_value name="$warebasket" exact="[$warebasket]"/>
				</do_if>
				<do_else>
					<set_value name="$warebasket" exact="[$warebasket.random]"/>
				</do_else>
			
			<run_script name="'order.mining.routine'">
				<param name="warebasket" value="$warebasket"/>
				<param name="range" value="$range"/>
				<param name="minbuy" value="$minbuy"/>
				<param name="maxbuy" value="$maxbuy"/>
				<param name="minsell" value="$minsell"/>
				<param name="maxsell" value="$maxsell"/>
				<param name="effectiveskill" value="this.assignedcontrolled.combinedskill"/>
				<param name="duration" value="$duration"/>
				<param name="debugchance" value="$debugchance"/>
				<param name="debugchance2" value="$debugchance2"/>
			</run_script>
		</actions>
	</attention>
</aiscript>
<?xml version="1.0" encoding="utf-8" ?>
<diff>
	<replace sel="/aiscript/order[@id='MiningRoutine_Expert']">
		<order id="MiningRoutine_BasicMidStandardAdvancedExpert" name="{1819190168, 1}" description="{1041, 602}" category="mining" allowinloop="false">
    <params>
      <param name="warebasket" required="true" default="this.ship.warebasket.list" type="list" text="{1041, 10146}" comment="Wares. List of resources that we will supply.">
        <input_param name="type" value="'ware'"/>
        <input_param name="cancarry" value="this.ship"/>
        <input_param name="isminable" value="true"/>
      </param>
      <param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space"/>
      <param name="minbuy" default="0" type="number" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided">
        <input_param name="startvalue" value="0"/>
        <input_param name="min" value="0"/>
        <input_param name="max" value="[[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max - 1, 0].max"/>
        <input_param name="step" value="1"/>
      </param>
      <param name="maxbuy" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max" type="number" text="{1041, 10056}" comment="Max gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided">
        <input_param name="startvalue" value="0"/>
        <input_param name="min" value="0"/>
        <input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max"/>
        <input_param name="step" value="1"/>
      </param>
      <param name="minsell" default="0" type="number" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
        <input_param name="startvalue" value="0"/>
        <input_param name="min" value="0"/>
        <input_param name="max" value="[[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max - 1, 0].max"/>
        <input_param name="step" value="1"/>
      </param>
      <param name="maxsell" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max" type="number" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
        <input_param name="startvalue" value="0"/>
        <input_param name="min" value="0"/>
        <input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max"/>
        <input_param name="step" value="1"/>
      </param>

      <param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
        <input_param name="startvalue" value="0s"/>
        <input_param name="min" value="0s"/>
        <input_param name="max" value="24h"/>
        <input_param name="step" value="1min"/>
        <patch value="0s" sinceversion="1"/>
      </param>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
      <param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <skill min="80"/>
    <requires primarypurpose="purpose.mine"/>
  </order>
	</replace>
</diff>﻿<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="order.mining.routine.standard" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">
	<order id="MiningRoutine_BasicMidStandard" name="{1819190164, 1}" description="{1819190164, 2}" category="mining" allowinloop="false">
		<params>

			<param name="maxwares" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3" type="number" text="{1819190164, 3}" comment="Maximum number of selectable wares.">
				<input_param name="min" value="1"/>
				<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3"/>
				<input_param name="step" value="1"/>
			</param>
			
			<param name="warebasket" required="true" default="this.ship.warebasket.list" type="list" text="{1041, 10146}" comment="Wares. List of resources that we will supply.">
				<input_param name="type" value="'ware'"/>
				<input_param name="cancarry" value="this.ship"/>
				<input_param name="isminable" value="true"/>
			</param>



			<param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space"/>
			<param name="minbuy" default="0" type="internal" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
			<param name="maxbuy" default="[(([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3) - 1), 0].max" type="number" text="{1041, 10054}" comment="Max gate distance to buy. Gathering range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[(([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3) - 1), 0].max"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="minsell" default="0" type="internal" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>
			<param name="maxsell" default="[(([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3) - 1), 0].max" type="number" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[(([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3) - 1), 0].max"/>
				<input_param name="step" value="1"/>
			</param>

			<param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
				<input_param name="startvalue" value="0s"/>
				<input_param name="min" value="0s"/>
				<input_param name="max" value="24h"/>
				<input_param name="step" value="1min"/>
				<patch value="0s" sinceversion="1"/>
			</param>
			<param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
				<input_param name="truevalue" value="100"/>
			</param>
			<param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
				<input_param name="truevalue" value="100"/>
			</param>
		</params>
		<skill min="40"/>
		<requires primarypurpose="purpose.mine"/>
	</order>
	<attention min="unknown">
		<actions>

			<do_if value="$maxwares and $maxwares gt 0">
				<set_value name="$maxcalc" exact="$maxwares"/>
			</do_if>
			<do_else>
				<set_value name="$maxcalc" exact="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3"/>
			</do_else>

			<set_value name="$keep" exact="($maxcalc)i"/>
			<set_value name="$keep" exact="[$keep, 1].max"/>
			<set_value name="$keep" exact="[$keep, $warebasket.count].min"/>

			<do_if value="$keep gt 0 and $warebasket.count gt 0">
				<set_value name="$limitedwarebasket" exact="[]"/>
				<do_all exact="$keep" counter="$i">
					<append_to_list name="$limitedwarebasket" exact="$warebasket.{$i}"/>
				</do_all>

				<set_value name="$warebasket" exact="$limitedwarebasket"/>

				<remove_value name="$limitedwarebasket"/>
			</do_if>
			
			<remove_value name="$maxcalc"/>
			<remove_value name="$keep"/>

			<do_if value="$debugchance or $debugchance2">
				<do_if value="$warebasket.count">
					<set_value name="$ws" exact="''"/>
					<do_all exact="$warebasket.count" counter="$i">
						<do_if value="@$warebasket.{$i}.knownname">
							<set_value name="$itemname" exact="$warebasket.{$i}.knownname"/>
						</do_if>
						<do_else>
							<set_value name="$itemname" exact="$warebasket.{$i}"/>
						</do_else>

						<do_if value="$ws != ''">
							<set_value name="$ws" exact="$ws + ', ' + $itemname"/>
						</do_if>
						<do_else>
							<set_value name="$ws" exact="$itemname"/>
						</do_else>
						<remove_value name="$itemname"/>
					</do_all>
					<debug_text text="'Used wares: %1'.[$ws]" filter="error"/>
					<remove_value name="$ws"/>
				</do_if>
				<do_else>
					<debug_text text="'Used wares: none'" filter="error"/>
				</do_else>
			</do_if>

			<run_script name="'order.mining.routine'">
				<param name="warebasket" value="$warebasket"/>
				<param name="range" value="$range"/>
				<param name="minbuy" value="$minbuy"/>
				<param name="maxbuy" value="$maxbuy"/>
				<param name="minsell" value="$minsell"/>
				<param name="maxsell" value="$maxsell"/>
				<param name="effectiveskill" value="this.assignedcontrolled.combinedskill"/>
				<param name="duration" value="$duration"/>
				<param name="debugchance" value="$debugchance"/>
				<param name="debugchance2" value="$debugchance2"/>
			</run_script>

			<!-- ensure commander order object contains the computed warebasket so Assist can copy it -->
			<do_if value="this.assignedcontrolled.defaultorder.exists">
				<edit_order_param order="this.assignedcontrolled.defaultorder" param="'warebasket'" value="$warebasket"/>
			</do_if>
		</actions>
	</attention>
</aiscript>
﻿<?xml version="1.0" encoding="utf-8"?>
<diff>
	<replace sel="/aiscript/init//do_if[@value=&quot;(this.assignedcontrolled.order.id == 'MiningRoutine') or (this.assignedcontrolled.order.id == 'MiningRoutine_Basic') or (this.assignedcontrolled.order.id == 'MiningRoutine_Advanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_Expert')&quot;]">
		<do_if value="(this.assignedcontrolled.order.id == 'MiningRoutine') or (this.assignedcontrolled.order.id == 'MiningRoutine_Basic') or (this.assignedcontrolled.order.id == 'MiningRoutine_Advanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_Expert') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMid') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandard') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandardAdvanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandardAdvancedExpert')">
			<set_value name="$thisorder" exact="this.assignedcontrolled.order"/>
		</do_if>
	</replace>

	<replace sel="/aiscript/patch[@sinceversion='7']//do_if[@value=&quot;(this.assignedcontrolled.order.id == 'MiningRoutine') or (this.assignedcontrolled.order.id == 'MiningRoutine_Basic') or (this.assignedcontrolled.order.id == 'MiningRoutine_Advanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_Expert')&quot;]">
		<do_if value="(this.assignedcontrolled.order.id == 'MiningRoutine') or (this.assignedcontrolled.order.id == 'MiningRoutine_Basic') or (this.assignedcontrolled.order.id == 'MiningRoutine_Advanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_Expert') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMid') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandard') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandardAdvanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandardAdvancedExpert')">
			<set_value name="$thisorder" exact="this.assignedcontrolled.order"/>
		</do_if>
	</replace>


	<replace sel="/aiscript/attention//do_if[@value=&quot;(this.assignedcontrolled.order.id == 'MiningRoutine') or (this.assignedcontrolled.order.id == 'MiningRoutine_Basic') or (this.assignedcontrolled.order.id == 'MiningRoutine_Advanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_Expert')&quot;]">
		<do_if value="(this.assignedcontrolled.order.id == 'MiningRoutine') or (this.assignedcontrolled.order.id == 'MiningRoutine_Basic') or (this.assignedcontrolled.order.id == 'MiningRoutine_Advanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_Expert') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMid') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandard') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandardAdvanced') or (this.assignedcontrolled.order.id == 'MiningRoutine_BasicMidStandardAdvancedExpert')">
			<set_order_syncpoint_reached order="this.assignedcontrolled.order"/>
		</do_if>
	</replace>
</diff><?xml version="1.0" encoding="utf-8" ?>
<diff>
	<replace sel="/aiscript/order[@id='TradeRoutine_Advanced']">
		<order id="TradeRoutine_BasicMidStandardAdvanced" name="{1819190167, 1}" description="{1041, 852}" category="trade" allowinloop="false">
			<params>
				<param name="warebasket" required="true" default="this.ship.warebasket.list" type="list" text="{1041, 10146}" comment="Wares. List of resources that we will supply.">
					<input_param name="type" value="'ware'"/>
					<input_param name="cancarry" value="this.ship"/>
				</param>
				<param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space"/>
				<param name="minbuy" default="0" type="internal" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
				<param name="maxbuy" default="[([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3), 0].max" type="number" text="{1041, 10054}" comment="Max gate distance to buy. Gathering range supported if $minsell and $maxsell are provided">
					<input_param name="startvalue" value="0"/>
					<input_param name="min" value="0"/>
					<input_param name="max" value="[([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3), 0].max"/>
					<input_param name="step" value="1"/>
				</param>
				<param name="minsell" default="0" type="internal" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>
				<param name="maxsell" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3" type="number" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
					<input_param name="startvalue" value="0"/>
					<input_param name="min" value="0"/>
					<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3"/>
					<input_param name="step" value="1"/>
				</param>

				<param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
					<input_param name="startvalue" value="0s"/>
					<input_param name="min" value="0s"/>
					<input_param name="max" value="24h"/>
					<input_param name="step" value="1min"/>
				</param>
				<param name="tradeforbuildstorage" default="null" type="internal" comment="Only used for trade.find.commander. Set to look for trade offers on the connected build storage rather than on the commander."/>
				<param name="usecover" default="false" type="internal" text="Use Cover" comment="used by smugglers"/>
				<param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
					<input_param name="truevalue" value="100"/>
				</param>
				<param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
					<input_param name="truevalue" value="100"/>
				</param>
			</params>
			<skill min="60"/>
			<requires>
				<match shiptype="shiptype.lasertower" negate="true"/>
				<match class="class.spacesuit" negate="true"/>
			</requires>
		</order>
	</replace>
</diff><?xml version="1.0" encoding="utf-8" ?>
<diff>
	<replace sel="/aiscript/order[@id='TradeRoutine_Basic']">
		<order id="TradeRoutine_Basic" name="{1819190161, 1}" description="{1041, 842}" category="trade" allowinloop="false">
    <params>
      <param name="warebasket" required="true" default="this.ship.warebasket.random" type="ware" text="{1041, 10144}" comment="Ware. Resource that we will supply.">
        <input_param name="cancarry" value="this.ship"/>
      </param>
      <param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if (@this.ship.commander.sector.exists and (this.ship.commander.isclass.[class.station, class.buildstorage] or this.ship.commander.type == shiptype.resupplier)) then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space">
        <patch condition="not $range" value="if this.sector then this.sector else (if this.zone.isclass.highway then this.zone.destination.sector else null)" sinceversion="1"/>
      </param>
      <param name="minbuy" default="0" type="internal" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
      <param name="maxbuy" default="0" type="internal" text="{1041, 10056}" comment="Max gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
      <param name="minsell" default="0" type="internal" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>
      <param name="maxsell" default="0" type="internal" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>

      <param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
        <input_param name="startvalue" value="0s"/>
        <input_param name="min" value="0s"/>
        <input_param name="max" value="24h"/>
        <input_param name="step" value="1min"/>
      </param>
      <param name="tradeforbuildstorage" default="null" type="internal" comment="Only used for trade.find.commander. Set to look for trade offers on the connected build storage rather than on the commander."/>
      <param name="usecover" default="false" type="internal" text="Use Cover" comment="used by smugglers"/>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
      <param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
      <match class="class.spacesuit" negate="true"/>
    </requires>
  </order>
	</replace>
</diff>﻿<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="order.trade.routine.basicmid" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
	<order id="TradeRoutine_BasicMid" name="{1819190163, 1}" description="{1819190163, 2}" category="trade" allowinloop="false">
		<params>
			<param name="warebasket" required="true" default="this.ship.warebasket.random" type="ware" text="{1041, 10144}" comment="Ware. Resource that we will supply.">
				<input_param name="cancarry" value="this.ship"/>
			</param>
			<param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space"/>
			<param name="minbuy" default="0" type="internal" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
			<param name="maxbuy" default="[([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3), 0].max" type="number" text="{1041, 10054}" comment="Max gate distance to buy. Gathering range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3), 0].max"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="minsell" default="0" type="internal" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>
			<param name="maxsell" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3" type="number" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3"/>
				<input_param name="step" value="1"/>
			</param>

			<param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
				<input_param name="startvalue" value="0s"/>
				<input_param name="min" value="0s"/>
				<input_param name="max" value="24h"/>
				<input_param name="step" value="1min"/>
			</param>
			<param name="tradeforbuildstorage" default="null" type="internal" comment="Only used for trade.find.commander. Set to look for trade offers on the connected build storage rather than on the commander."/>
			<param name="usecover" default="false" type="internal" text="Use Cover" comment="used by smugglers"/>
			<param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
				<input_param name="truevalue" value="100"/>
			</param>
			<param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
				<input_param name="truevalue" value="100"/>
			</param>
		</params>
		<skill min="20"/>
		<requires>
			<match shiptype="shiptype.lasertower" negate="true"/>
			<match class="class.spacesuit" negate="true"/>
		</requires>
	</order>
	<patch sinceversion="1">
		<do_if value="not $range">
			<do_if value="this.sector">
				<set_value name="$range" exact="this.sector"/>
			</do_if>
			<do_elseif value="this.zone.isclass.highway">
				<set_value name="$range" exact="this.zone.destination.sector"/>
			</do_elseif>
			<do_else>
				<debug_text text="'PATCH: failed trying to set $range. ship is neither in a sector nor a highway. parent: %s %s %s'.[@this.assignedcontrolled.parent.knownname, this.assignedcontrolled.parent, this.assignedcontrolled.parent.macro]" filter="error"/>
			</do_else>
			<do_if value="this.assignedcontrolled.defaultorder.id == 'TradeRoutine_BasicMid'">
				<edit_order_param order="this.assignedcontrolled.defaultorder" param="'range'" value="$range"/>
			</do_if>
		</do_if>
	</patch>
	<attention min="unknown">
		<actions>
			<do_if value="not @$warebasket.count">
				<set_value name="$warebasket" exact="[$warebasket]"/>
			</do_if>
			<do_else>
				<set_value name="$warebasket" exact="[$warebasket.random]"/>
			</do_else>
			<run_script name="'order.trade.routine'">
				<param name="warebasket" value="$warebasket"/>
				<param name="range" value="$range"/>
				<param name="minbuy" value="$minbuy"/>
				<param name="maxbuy" value="$maxbuy"/>
				<param name="minsell" value="$minsell"/>
				<param name="maxsell" value="$maxsell"/>
				<param name="duration" value="$duration"/>
				<param name="tradeforbuildstorage" value="$tradeforbuildstorage"/>
				<param name="usecover" value="$usecover"/>
				<param name="debugchance" value="$debugchance"/>
				<param name="debugchance2" value="$debugchance2"/>
			</run_script>
		</actions>
	</attention>
</aiscript>
﻿<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="order.trade.routine.expert" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
	<order id="TradeRoutine_BasicMidStandardAdvancedExpert" name="{1819190169, 1}" description="{1819190169, 2}" category="trade" allowinloop="false">
		<params>
			<param name="warebasket" required="true" default="this.ship.warebasket.list" type="list" text="{1041, 10146}" comment="Wares. List of resources that we will supply.">
				<input_param name="type" value="'ware'"/>
				<input_param name="cancarry" value="this.ship"/>
			</param>
			<param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space"/>
			<param name="minbuy" default="0" type="number" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max - 1, 0].max"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="maxbuy" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max" type="number" text="{1041, 10054}" comment="Max gate distance to buy. Gathering range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="minsell" default="0" type="number" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max - 1, 0].max"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="maxsell" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max" type="number" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max"/>
				<input_param name="step" value="1"/>
			</param>

			<param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
				<input_param name="startvalue" value="0s"/>
				<input_param name="min" value="0s"/>
				<input_param name="max" value="24h"/>
				<input_param name="step" value="1min"/>
			</param>
			<param name="tradeforbuildstorage" default="null" type="internal" comment="Only used for trade.find.commander. Set to look for trade offers on the connected build storage rather than on the commander."/>
			<param name="usecover" default="false" type="internal" text="Use Cover" comment="used by smugglers"/>
			<param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
				<input_param name="truevalue" value="100"/>
			</param>
			<param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
				<input_param name="truevalue" value="100"/>
			</param>
		</params>
		<skill min="80"/>
		<requires>
			<match shiptype="shiptype.lasertower" negate="true"/>
			<match class="class.spacesuit" negate="true"/>
		</requires>
	</order>
	<attention min="unknown">
		<actions>
			<run_script name="'order.trade.routine'">
				<param name="warebasket" value="$warebasket"/>
				<param name="range" value="$range"/>
				<param name="minbuy" value="$minbuy"/>
				<param name="maxbuy" value="$maxbuy"/>
				<param name="minsell" value="$minsell"/>
				<param name="maxsell" value="$maxsell"/>
				<param name="duration" value="$duration"/>
				<param name="tradeforbuildstorage" value="$tradeforbuildstorage"/>
				<param name="usecover" value="$usecover"/>
				<param name="debugchance" value="$debugchance"/>
				<param name="debugchance2" value="$debugchance2"/>
			</run_script>
		</actions>
	</attention>
</aiscript>
﻿<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="order.trade.routine.standard" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
	<order id="TradeRoutine_BasicMidStandard" name="{1819190165, 1}" description="{1819190165, 2}" category="trade" allowinloop="false">
		<params>

			<param name="maxwares" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3" type="number" text="{1819190165, 3}" comment="Maximum number of selectable wares.">
				<input_param name="min" value="1"/>
				<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3"/>
				<input_param name="step" value="1"/>
			</param>
			
			<param name="warebasket" required="true" default="this.ship.warebasket.list" type="list" text="{1041, 10146}" comment="Wares. List of resources that we will supply.">
				<input_param name="type" value="'ware'"/>
				<input_param name="cancarry" value="this.ship"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="$maxwares"/>
			</param>


			
			<param name="range" default="if @this.ship.commanderentity.$config_subordinate_range then @this.ship.commanderentity.$config_subordinate_range 
             else (if @this.ship.commander.isclass.[class.station, class.buildstorage] then this.ship.commander.sector else (if this.ship.jobmainsector then this.ship.jobmainsector else this.sector))" type="sector" text="{1041, 10005}" comment="Anchor space"/>
			<param name="minbuy" default="0" type="internal" text="{1041, 10067}" comment="Min gate distance to gather resources. Gathering range supported if $minsell and $maxsell are provided"/>
			<param name="maxbuy" default="[(([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3) - 1), 0].max" type="number" text="{1041, 10054}" comment="Max gate distance to buy. Gathering range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[(([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3) - 1), 0].max"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="minsell" default="0" type="internal" text="{1041, 10069}" comment="Min gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided"/>
			<param name="maxsell" default="[(([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3) - 1), 0].max" type="number" text="{1041, 10058}" comment="Max gate distance to sell resources. Sell range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[(([@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3) - 1), 0].max"/>
				<input_param name="step" value="1"/>
			</param>

			<param name="duration" default="0s" type="time" infinitevalue="0s" advanced="true" text="{1041, 10034}" comment="Duration">
				<input_param name="startvalue" value="0s"/>
				<input_param name="min" value="0s"/>
				<input_param name="max" value="24h"/>
				<input_param name="step" value="1min"/>
			</param>
			<param name="tradeforbuildstorage" default="null" type="internal" comment="Only used for trade.find.commander. Set to look for trade offers on the connected build storage rather than on the commander."/>
			<param name="usecover" default="false" type="internal" text="Use Cover" comment="used by smugglers"/>
			<param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
				<input_param name="truevalue" value="100"/>				
			</param>
			<param name="debugchance2" type="bool" default="0" advanced="true" text="{1041, 10142}" comment="Verbose debug output">
				<input_param name="truevalue" value="100"/>
			</param>
		</params>
		<skill min="40"/>
		<requires>
			<match shiptype="shiptype.lasertower" negate="true"/>
			<match class="class.spacesuit" negate="true"/>
		</requires>
	</order>
	<attention min="unknown">
		<actions>

			<do_if value="$maxwares and $maxwares gt 0">
				<set_value name="$maxcalc" exact="$maxwares"/>
			</do_if>
			<do_else>
				<set_value name="$maxcalc" exact="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max / 3"/>
			</do_else>

			<set_value name="$keep" exact="($maxcalc)i"/>
			<set_value name="$keep" exact="[$keep, 1].max"/>
			<set_value name="$keep" exact="[$keep, $warebasket.count].min"/>

			<do_if value="$keep gt 0 and $warebasket.count gt 0">
				<set_value name="$limitedwarebasket" exact="[]"/>
				<do_all exact="$keep" counter="$i">
					<append_to_list name="$limitedwarebasket" exact="$warebasket.{$i}"/>
				</do_all>

				<set_value name="$warebasket" exact="$limitedwarebasket"/>

				<remove_value name="$limitedwarebasket"/>
			</do_if>
			
			<remove_value name="$maxcalc"/>
			<remove_value name="$keep"/>

			<do_if value="$debugchance or $debugchance2">
				<do_if value="$warebasket.count">
					<set_value name="$ws" exact="''"/>
					<do_all exact="$warebasket.count" counter="$i">
						<do_if value="@$warebasket.{$i}.knownname">
							<set_value name="$itemname" exact="$warebasket.{$i}.knownname"/>
						</do_if>
						<do_else>
							<set_value name="$itemname" exact="$warebasket.{$i}"/>
						</do_else>

						<do_if value="$ws != ''">
							<set_value name="$ws" exact="$ws + ', ' + $itemname"/>
						</do_if>
						<do_else>
							<set_value name="$ws" exact="$itemname"/>
						</do_else>
						<remove_value name="$itemname"/>
					</do_all>
					<debug_text text="'Used wares: %1'.[$ws]" filter="error"/>
					<remove_value name="$ws"/>
				</do_if>
				<do_else>
					<debug_text text="'Used wares: none'" filter="error"/>
				</do_else>
			</do_if>

			<run_script name="'order.trade.routine'">
				<param name="warebasket" value="$warebasket"/>
				<param name="range" value="$range"/>
				<param name="minbuy" value="$minbuy"/>
				<param name="maxbuy" value="$maxbuy"/>
				<param name="minsell" value="$minsell"/>
				<param name="maxsell" value="$maxsell"/>
				<param name="duration" value="$duration"/>
				<param name="tradeforbuildstorage" value="$tradeforbuildstorage"/>
				<param name="usecover" value="$usecover"/>
				<param name="debugchance" value="$debugchance"/>
				<param name="debugchance2" value="$debugchance2"/>
			</run_script>

			<!-- ensure commander order object contains the computed warebasket so Assist can copy it -->
			<do_if value="this.assignedcontrolled.defaultorder.exists">
				<edit_order_param order="this.assignedcontrolled.defaultorder" param="'warebasket'" value="$warebasket"/>
			</do_if>
		</actions>
	</attention>
</aiscript>
﻿<?xml version="1.0" encoding="utf-8"?>
<diff>
	<replace sel="/aiscript/init//do_if[@value=&quot;(this.assignedcontrolled.order.id == 'TradeRoutine') or (this.assignedcontrolled.order.id == 'TradeRoutine_Basic') or (this.assignedcontrolled.order.id == 'TradeRoutine_Advanced')&quot;]">
		<do_if value="(this.assignedcontrolled.order.id == 'TradeRoutine') or (this.assignedcontrolled.order.id == 'TradeRoutine_Basic') or (this.assignedcontrolled.order.id == 'TradeRoutine_Advanced') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMid') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandard') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandardAdvanced') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandardAdvancedExpert')">
			<set_value name="$thisorder" exact="this.assignedcontrolled.order"/>
		</do_if>
	</replace>

	<replace sel="/aiscript/patch[@sinceversion='10']//do_if[@value=&quot;(this.assignedcontrolled.order.id == 'TradeRoutine') or (this.assignedcontrolled.order.id == 'TradeRoutine_Basic') or (this.assignedcontrolled.order.id == 'TradeRoutine_Advanced')&quot;]">
		<do_if value="(this.assignedcontrolled.order.id == 'TradeRoutine') or (this.assignedcontrolled.order.id == 'TradeRoutine_Basic') or (this.assignedcontrolled.order.id == 'TradeRoutine_Advanced') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMid') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandard') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandardAdvanced') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandardAdvancedExpert')">
			<set_value name="$thisorder" exact="this.assignedcontrolled.order"/>
		</do_if>
	</replace>

	<replace sel="/aiscript/attention//do_if[@value=&quot;(this.assignedcontrolled.order.id == 'TradeRoutine') or (this.assignedcontrolled.order.id == 'TradeRoutine_Basic') or (this.assignedcontrolled.order.id == 'TradeRoutine_Advanced')&quot;]">
		<do_if value="(this.assignedcontrolled.order.id == 'TradeRoutine') or (this.assignedcontrolled.order.id == 'TradeRoutine_Basic') or (this.assignedcontrolled.order.id == 'TradeRoutine_Advanced') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMid') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandard') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandardAdvanced') or (this.assignedcontrolled.order.id == 'TradeRoutine_BasicMidStandardAdvancedExpert')">
			<set_order_syncpoint_reached order="this.assignedcontrolled.order"/>
		</do_if>
	</replace>
</diff>
<?xml version="1.0" encoding="utf-8"?>
<diff>
	<add sel="/language">
	
		<page id="1819190160" voice="no">
			<t id="1">0- Minage local auto</t>
		</page>
		
		<page id="1819190161" voice="no">
			<t id="1">0- Commerce local auto</t>
		</page>
		
		<page id="1819190162" voice="no">
			<t id="1">1- Minage basique auto</t>
			<t id="2">Permet de miner et de vendre une unique ressource dans un rayon de 1 à 4 secteurs en fonction de vos compétences de pilotages ou de gestion.</t>		
		</page>
		
		<page id="1819190163" voice="no">
			<t id="1">1- Commerce basique auto</t>
			<t id="2">Permet de commercer en achetant et vendant une unique ressource dans un rayon de 1 à 4 secteurs en fonction de vos compétences de pilotages ou de gestion.</t>		
		</page>
		
		<page id="1819190164" voice="no">
			<t id="1">2- Minage standard auto</t>
			<t id="2">Vous permet de miner et de vendre plusieurs ressources dans un rayon de 1 à 4 secteurs, selon vos compétences de pilotage ou de gestion. Si vous sélectionnez plus de ressources minables que ce qui est autorisé, seules les premières seront utilisées.</t>
			<t id="3">Ressources max</t>
		</page>
		
		<page id="1819190165" voice="no">
			<t id="1">2- Commerce standard auto</t>
			<t id="2">Vous permet d'échanger en achetant et en vendant plusieurs ressources dans un rayon de 1 à 4 secteurs, selon vos compétences de pilotage ou de gestion. Si vous sélectionnez plus de marchandises que ce qui est autorisé, seules les premières seront utilisées.</t>
			<t id="3">Marchandises max</t>
		</page>
		
		<page id="1819190166" voice="no">
			<t id="1">3- Minage avancé auto</t>
		</page>
		
		<page id="1819190167" voice="no">
			<t id="1">3- Commerce avancé auto</t>
		</page>
		
		<page id="1819190168" voice="no">
			<t id="1">4- Minage expert auto</t>
		</page>
		
		<page id="1819190169" voice="no">
			<t id="1">4- Commerce expert auto</t>
			<t id="2">Permet de commercer en achetant et vendant de multiples ressources dans un rayon jusqu'à 15 secteurs en fonction de vos compétences de pilotages ou de gestion.</t>		
		</page>
		
	</add>
</diff>
<?xml version="1.0" encoding="utf-8"?>
<language>

	<page id="1819190160" voice="no">
		<t id="1">0- Local AutoMine</t>
	</page>
		
	<page id="1819190161" voice="no">
		<t id="1">0- Local AutoTrade</t>
	</page>
		
	<page id="1819190162" voice="no">
		<t id="1">1- Basic AutoMine</t>
		<t id="2">Allows you to mine and sell a single resource within a radius of 1 to 4 sectors depending on your piloting or management skills.</t>
	</page>
	
	<page id="1819190163" voice="no">
		<t id="1">1- Basic AutoTrade</t>
		<t id="2">Allows you to trade by buying and selling a single resource within a radius of 1 to 4 sectors depending on your piloting or management skills.</t>
	</page>
	
	<page id="1819190164" voice="no">
		<t id="1">2- Standard AutoMine</t>
		<t id="2">Allows you to mine and sell multiple resources within 1 to 4 sectors, depending on your piloting or management skills. If you select more mineable resources than allowed, only the first ones will be used.</t>
		<t id="3">Max resources</t>
	</page>
	
	<page id="1819190165" voice="no">
		<t id="1">2- Standard AutoTrade</t>
		<t id="2">Allows you to trade by buying and selling multiple resources within a radius of 1 to 4 sectors depending on your piloting or management skills. If you select more wares than allowed, only the first wares up to your maximum will be used.</t>
		<t id="3">Max wares</t>
	</page>
	
	<page id="1819190166" voice="no">
		<t id="1">3- Advanced AutoMine</t>
	</page>
	
	<page id="1819190167" voice="no">
		<t id="1">3- Advanced AutoTrade</t>
	</page>
	
	<page id="1819190168" voice="no">
		<t id="1">4- Expert AutoMine</t>
	</page>
	
	<page id="1819190169" voice="no">
		<t id="1">4- Expert AutoTrade</t>
		<t id="2">Allows you to trade by buying and selling multiple wares within a radius of up to 15 sectors depending on your piloting or management skills.</t>
	</page>
	
</language>


